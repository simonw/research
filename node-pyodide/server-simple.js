import { loadPyodide } from 'pyodide';
import { readFileSync, writeFileSync, mkdirSync, existsSync } from 'fs';

/**
 * Simple Pyodide demo - no external packages required
 * This demonstrates the core concept without network dependencies
 */

console.log('========================================');
console.log('Pyodide Simple Demo');
console.log('Running Python in WebAssembly via Node.js');
console.log('========================================\n');

async function main() {
  try {
    // Initialize Pyodide (no packages needed for this demo)
    console.log('Loading Pyodide WebAssembly runtime...');
    const pyodide = await loadPyodide();
    console.log('✓ Pyodide loaded successfully!\n');

    // Set up virtual filesystem
    console.log('Setting up virtual filesystem...');
    try {
      if (pyodide.FS) {
        pyodide.FS.mkdir('/output');
        console.log('✓ Virtual /output directory created\n');
      }
    } catch (error) {
      if (!error.message.includes('File exists')) {
        console.warn('Note: Filesystem setup had issues (continuing anyway)\n');
      }
    }

    // Read and run the Python script
    console.log('Running Python script...\n');
    console.log('-'.repeat(60));
    const pythonCode = readFileSync('./example-simple.py', 'utf-8');
    await pyodide.runPythonAsync(pythonCode);
    console.log('-'.repeat(60));

    // Extract generated files from virtual filesystem
    console.log('\nExtracting generated files from virtual filesystem...');

    // Create output directory on host
    if (!existsSync('./output')) {
      mkdirSync('./output', { recursive: true });
    }

    // List and extract files
    if (pyodide.FS) {
      const files = pyodide.FS.readdir('/output');

      for (const filename of files) {
        if (filename === '.' || filename === '..') continue;

        try {
          const data = pyodide.FS.readFile(`/output/${filename}`);
          writeFileSync(`./output/${filename}`, data);
          console.log(`  ✓ Extracted: output/${filename}`);
        } catch (err) {
          console.error(`  ✗ Error extracting ${filename}:`, err.message);
        }
      }
    }

    console.log('\n========================================');
    console.log('Demo Complete!');
    console.log('========================================');
    console.log('\nCheck the output/ directory for generated files:');
    console.log('  - results.json (structured data)');
    console.log('  - report.txt (text report)');
    console.log('  - data.csv (CSV data)');
    console.log('\nAll of this was generated by Python running in WebAssembly!');

  } catch (error) {
    console.error('\n❌ Error:', error.message);
    console.error('\nFull error:', error);
    process.exit(1);
  }
}

main();
